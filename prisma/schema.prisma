generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                   Int          @id @default(autoincrement())
  nombre               String
  apellido             String
  email                String       @unique
  contrase√±a          String
  id_area              Int
  id_rol               Int
  id_supervisor        Int?
  auditoria            Auditoria[]
  comentarios          Comentario[]
  jornadasSupervisadas Jornada[]    @relation("SupervisorJornada")
  jornadas             Jornada[]    @relation("UsuarioJornada")
  area                 Area         @relation(fields: [id_area], references: [id])
  rol                  Rol          @relation(fields: [id_rol], references: [id])
  supervisor           Usuario?     @relation("SupervisorEmpleado", fields: [id_supervisor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuarios_supervisor")
  supervisa            Usuario[]    @relation("SupervisorEmpleado")

  @@index([id_supervisor], map: "idx_usuarios_supervisor")
  @@map("Usuario")
}

model Jornada {
  id_jornada    Int         @id @default(autoincrement())
  fecha         DateTime
  hora_checkin  DateTime    @default(now())
  hora_checkout DateTime?
  aprobado      Boolean
  id_usuario    Int
  id_supervisor Int?
  observaciones String?
  actividades   Actividad[]
  supervisor    Usuario?    @relation("SupervisorJornada", fields: [id_supervisor], references: [id], onDelete: Restrict)
  usuario       Usuario     @relation("UsuarioJornada", fields: [id_usuario], references: [id])

  @@map("Jornada")
}

model Actividad {
  id            Int          @id @default(autoincrement())
  id_jornada    Int
  tarea         String
  meta          String
  id_estado     Int
  observaciones String?
  es_arrastrada Boolean      @default(false) // Indica si fue arrastrada de una jornada anterior
  id_actividad_origen Int?   // Referencia a la actividad original si es arrastrada
  estado        Estado       @relation(fields: [id_estado], references: [id])
  jornada       Jornada      @relation(fields: [id_jornada], references: [id_jornada])
  comentarios   Comentario[]
  actividadOrigen Actividad? @relation("ActividadArrastrada", fields: [id_actividad_origen], references: [id])
  actividadesArrastradas Actividad[] @relation("ActividadArrastrada")

  @@map("Actividad")
}

model Comentario {
  id               Int       @id @default(autoincrement())
  id_actividad     Int
  id_usuario       Int
  comentario       String
  fecha_comentario DateTime
  actividad        Actividad @relation(fields: [id_actividad], references: [id])
  usuario          Usuario   @relation(fields: [id_usuario], references: [id], map: "Comentario_id_supervisor_fkey")

  @@map("Comentario")
}

model Estado {
  id            Int         @id @default(autoincrement())
  nombre_estado String
  actividades   Actividad[]

  @@map("Estado")
}

model Rol {
  id         Int       @id @default(autoincrement())
  nombre_rol String
  usuarios   Usuario[]

  @@map("Rol")
}

model Area {
  id          Int       @id @default(autoincrement())
  nombre_area String
  usuarios    Usuario[]

  @@map("Area")
}

model Auditoria {
  id          Int      @id @default(autoincrement())
  id_usuario  Int
  accion      String
  fecha       DateTime @default(now())
  descripcion String?
  usuario     Usuario  @relation(fields: [id_usuario], references: [id])

  @@map("Auditoria")
}
